@page
@model UI.Pages.Admins.DashboardModel
@{
    Layout = "_LayoutAdmin";
}

<h2>News Articles Dashboard</h2>

<form id="reportForm">
    <div class="row">
        <div class="col-md-4">
            <label for="reportType" class="form-label">Report Type</label>
            <select id="reportType" name="ReportType" class="form-select">
                <option value="day" selected>By Day</option>
                <option value="month">By Month</option>
            </select>
        </div>
        <div class="col-md-4">
            <label for="startDate" class="form-label">Start Date</label>
            <input type="date" id="startDate" name="StartDate" class="form-control" value="@Model.StartDate.ToString("yyyy-MM-dd")" />
        </div>
        <div class="col-md-4">
            <label for="endDate" class="form-label">End Date</label>
            <input type="date" id="endDate" name="EndDate" class="form-control" value="@Model.EndDate.ToString("yyyy-MM-dd")" />
        </div>
    </div>
</form>

<div class="row mt-3">
    <div class="col-md-6">
        <h4>Active Articles: <span id="activeArticlesCount">@Model.Statistics.ActiveArticlesCount</span></h4>
    </div>
    <div class="col-md-6">
        <h4>Inactive Articles: <span id="inactiveArticlesCount">@Model.Statistics.InactiveArticlesCount</span></h4>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <canvas id="articlesPerPeriodChart"></canvas>
    </div>
    <div class="col-md-6">
        <canvas id="totalArticlesChart"></canvas>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const reportTypeSelect = document.getElementById('reportType');
            const startDateInput = document.getElementById('startDate');
            const endDateInput = document.getElementById('endDate');

            const ctxPeriod = document.getElementById('articlesPerPeriodChart').getContext('2d');
            const ctxTotal = document.getElementById('totalArticlesChart').getContext('2d');

            let articlesPerPeriodChart = new Chart(ctxPeriod, {
                type: 'line',
                data: {
                    labels: [],
                    datasets: [{
                        label: 'Articles Published Per Period',
                        data: [],
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1,
                        fill: false
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            let totalArticlesChart = new Chart(ctxTotal, {
                type: 'line',
                data: {
                    labels: [],
                    datasets: [{
                        label: 'Total Articles Per Period',
                        data: [],
                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 1,
                        fill: false
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            function updateCharts() {
                const reportType = reportTypeSelect.value;
                const startDate = startDateInput.value;
                const endDate = endDateInput.value;

                fetch(`?handler=GetStatistics&reportType=${reportType}&startDate=${startDate}&endDate=${endDate}`)
                    .then(response => response.json())
                    .then(data => {
                        document.getElementById('activeArticlesCount').innerText = data.activeArticlesCount;
                        document.getElementById('inactiveArticlesCount').innerText = data.inactiveArticlesCount;

                        articlesPerPeriodChart.data.labels = Object.keys(data.articlesPublishedPerPeriod);
                        articlesPerPeriodChart.data.datasets[0].data = Object.values(data.articlesPublishedPerPeriod);
                        articlesPerPeriodChart.update();

                        totalArticlesChart.data.labels = Object.keys(data.totalArticlesPerPeriod);
                        totalArticlesChart.data.datasets[0].data = Object.values(data.totalArticlesPerPeriod);
                        totalArticlesChart.update();
                    });
            }

            reportTypeSelect.addEventListener('change', updateCharts);
            startDateInput.addEventListener('change', updateCharts);
            endDateInput.addEventListener('change', updateCharts);

            updateCharts();
        });
    </script>
}